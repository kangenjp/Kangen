;(function(){
(function (global, factory) {
  if (typeof define === "function" && define.amd) {
    define(['exports', '../_style/global.css', './style/rolling.css'], factory);
  } else if (typeof exports !== "undefined") {
    factory(exports, require('../_style/global.css'), require('./style/rolling.css'));
  } else {
    var mod = {
      exports: {}
    };
    factory(mod.exports, global.global, global.rolling);
    global.rolling = mod.exports;
  }
})(this, function (exports) {
  'use strict';

  Object.defineProperty(exports, "__esModule", {
    value: true
  });
  exports.default = {
    name: 'md-cashier-rolling',

    props: {
      size: {
        type: Number,
        default: 70
      },
      isSuccess: {
        type: Boolean,
        default: false
      }
    },

    data: function data() {
      return {
        animating: false,
        circleRate: 0,
        rightRate: 0,
        startTmp: Date.now(),
        successFlag: false
      };
    },


    watch: {
      isSuccess: function isSuccess(val) {
        if (val) {
          this.doSuccess();
        } else {
          this.startTmp = Date.now();
          this.successFlag = false;
        }
      }
    },

    computed: {
      strokeWidth: function strokeWidth() {
        return this.size / 16;
      },
      strokeDasharray: function strokeDasharray() {
        return this.baseStrokeDasharray * this.circleRate + ' ' + this.baseStrokeDasharray * (1 - this.circleRate);
      },
      baseStrokeDasharray: function baseStrokeDasharray() {
        return Math.PI * this.size;
      },
      radius: function radius() {
        return this.size / 2;
      }
    },

    mounted: function mounted() {
      this.isSuccess && this.doSuccess();
    },


    methods: {
      doSuccess: function doSuccess() {
        var _this = this;

        var st = this.startTmp;
        var et = Date.now();
        var delay = Math.ceil((et - st) / 1500) * 1500 - (et - st);
        setTimeout(function () {
          _this.successFlag = true;
        }, delay);
      }
    }
  };
});
})()
if (module.exports.__esModule) module.exports = module.exports.default
var __vue__options__ = (typeof module.exports === "function"? module.exports.options: module.exports)
if (__vue__options__.functional) {console.error("[vueify] functional components are not supported and should be defined in plain js files using render functions.")}
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"md-cashier-rolling"},[_c('svg',{staticClass:"rolling",attrs:{"viewBox":"0 0 100 100","preserveAspectRatio":"xMidYMid"}},[(!_vm.successFlag)?[_c('g',{staticClass:"circle",attrs:{"transform":"matrix(0, 1, 1, 0, 0, 0)"}},[_c('circle',{staticClass:"loading",attrs:{"cx":"50","cy":"50","fill":"#FFF6F1","stroke":"#fc9153","stroke-width":_vm.strokeWidth,"r":_vm.radius}},[_c('animateTransform',{attrs:{"attributeName":"transform","type":"rotate","calcMode":"linear","values":"0 50 50;360 50 50","keyTimes":"0;1","dur":"2s","begin":"0s","repeatCount":"indefinite"}})],1)])]:[_c('g',{staticClass:"circle"},[_c('circle',{staticClass:"success",attrs:{"cx":"50","cy":"50","fill":"#FFF6F1","stroke":"none","r":_vm.radius}})]),_vm._v(" "),_c('g',{staticClass:"right"},[_c('line',{staticStyle:{"stroke":"#fc9153"},style:({'strokeWidth':_vm.strokeWidth}),attrs:{"x1":"32","y1":"47","x2":"45","y2":"62","stroke-dasharray":"20"}}),_vm._v(" "),_c('line',{staticStyle:{"stroke":"#fc9153"},style:({'strokeWidth':_vm.strokeWidth}),attrs:{"x1":"42","y1":"62","x2":"68.4","y2":"40","stroke-dasharray":"35"}})])]],2)])}
__vue__options__.staticRenderFns = []
if (module.hot) {(function () {  var hotAPI = require("vue-hot-reload-api")
  hotAPI.install(require("vue"), true)
  if (!hotAPI.compatible) return
  module.hot.accept()
  if (!module.hot.data) {
    hotAPI.createRecord("data-v-314ad45e", __vue__options__)
  } else {
    hotAPI.reload("data-v-314ad45e", __vue__options__)
  }
})()}